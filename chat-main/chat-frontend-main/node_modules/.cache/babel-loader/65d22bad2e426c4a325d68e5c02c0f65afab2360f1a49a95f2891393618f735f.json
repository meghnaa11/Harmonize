{"ast":null,"code":"var _jsxFileName = \"/media/tina/0ED49F87D49F7027/1_SIT_2024Fall/CS554/project/chat-frontend-main/src/components/Room/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useCallback } from 'react';\nimport './style.css';\nimport Chat from '../Chat';\nimport Sidebar from '../Sidebar';\nimport NewRoom from '../NewRoom';\nimport chatHttp from '../../services/Http';\nimport RoomDetails from '../RoomDetails';\nimport { useChat } from '../../context/ChatContext';\nimport GeneralSnackbar from '../GeneralSnackbar';\nimport messageAudio from '../../assets/audio/message.mp3';\nimport { useUser } from '../../context/UserContext';\nimport { USER_INITIAL_VALUE } from '../../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst audio = new Audio(messageAudio);\nconst Room = ({\n  history\n}) => {\n  _s();\n  const {\n    userDetails,\n    setUserDetails\n  } = useUser();\n  const [openModal, setOpenModal] = useState(false);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const snackbarMsg = useRef('');\n  const [rooms, setRooms] = useState([]);\n  const [roomCode, setRoomCode] = useState('');\n  const chatSocket = useChat();\n  const updateUnread = useCallback((room, willReset) => {\n    const userIndex = room.users.findIndex(roomUser => roomUser.user.username === userDetails.username);\n    room.users[userIndex].unread = willReset ? 0 : ++room.users[userIndex].unread;\n    chatSocket.updateUnread(room.users[userIndex].unread, room.code, userDetails.username);\n    return room;\n  }, [chatSocket, userDetails.username]);\n  useEffect(() => {\n    console.log('Initializing Socket Context..');\n    chatSocket.init();\n    chatHttp.getRooms().then(({\n      data\n    }) => {\n      setRooms(() => {\n        if (data.rooms[0]) data.rooms[0] = updateUnread(data.rooms[0], true);\n        return data.rooms;\n      });\n      if (data.rooms[0]) {\n        setRoomCode(data.rooms[0].code);\n        data.rooms.forEach(room => {\n          chatSocket.join({\n            name: userDetails.username || '',\n            room: room.code\n          });\n        });\n      }\n    }).catch(({\n      response\n    }) => {\n      if (response.status === 401) {\n        localStorage.clear();\n        setUserDetails(USER_INITIAL_VALUE);\n        history.push('/login');\n      }\n    });\n  }, [history, chatSocket, userDetails.username, setUserDetails, updateUnread]);\n  useEffect(() => {\n    if (chatSocket === null) return;\n    const joinSubscription = chatSocket.onJoin().subscribe(({\n      userDetails,\n      joinedRoom\n    }) => {\n      window.location.reload();\n    });\n    const leaveSubscription = chatSocket.onLeave().subscribe(({\n      userDetails,\n      leftRoom\n    }) => {\n      window.location.reload();\n    });\n    return () => {\n      joinSubscription.unsubscribe();\n      leaveSubscription.unsubscribe();\n    };\n  }, [chatSocket]);\n  useEffect(() => {\n    if (chatSocket === null) return;\n    const deleteSubscription = chatSocket.onRoomDelete().subscribe(deletedRoom => {\n      window.location.reload();\n    });\n    const messageSubscription = chatSocket.onMessage().subscribe(event => {\n      if (!event) {\n        window.location.reload();\n        return;\n      }\n      const {\n        newMsg,\n        updatedRoom\n      } = event;\n      if (!(newMsg !== null && newMsg !== void 0 && newMsg.roomCode)) {\n        console.warn('Invalid message format:', event);\n        return;\n      }\n      setRooms(prevRooms => {\n        const newRooms = [...prevRooms];\n        const roomIndex = newRooms.findIndex(room => room.code === newMsg.roomCode);\n        if (roomIndex >= 0) {\n          if (updatedRoom) {\n            newRooms[roomIndex] = updatedRoom;\n          }\n          if (newMsg.roomCode !== roomCode) {\n            newRooms[roomIndex] = updateUnread(newRooms[roomIndex], false);\n            audio.play();\n          }\n        }\n        return newRooms;\n      });\n    });\n    return () => {\n      deleteSubscription.unsubscribe();\n      messageSubscription.unsubscribe();\n    };\n  }, [chatSocket, roomCode, userDetails.username, updateUnread]);\n  const getCurrentRoom = () => {\n    return rooms.find(room => room.code === roomCode);\n  };\n  const handleRoomClick = code => {\n    setRoomCode(code);\n    setRooms(prevRooms => {\n      const newRooms = [...prevRooms];\n      const roomIndex = newRooms.findIndex(room => room.code === code);\n      newRooms[roomIndex] = updateUnread(newRooms[roomIndex], true);\n      return newRooms;\n    });\n  };\n  const handleRoomLeave = code => {\n    setRoomCode('');\n    setRooms(rooms.filter(room => room.code !== code));\n  };\n  const handleModalClose = room => {\n    if (room) {\n      setRooms([...rooms, room]);\n      setRoomCode(room.code);\n    }\n    setOpenModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onNewRoom: () => setOpenModal(true),\n      rooms: rooms,\n      history: history,\n      onRoomClick: handleRoomClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 4\n    }, this), roomCode ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Chat, {\n        roomCode: roomCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(RoomDetails, {\n        roomDetails: getCurrentRoom(),\n        onRoomLeave: handleRoomLeave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat chat--no-room\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__body\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header__text\",\n          children: rooms.length > 0 ? 'Click a room to start chatting!' : 'Create or Join a room to start a conversation!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(NewRoom, {\n      open: openModal,\n      onClose: handleModalClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(GeneralSnackbar, {\n      message: snackbarMsg.current,\n      open: openSnackbar,\n      onClose: () => setOpenSnackbar(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 3\n  }, this);\n};\n_s(Room, \"DLcEK+24j/+ADfwrC1OpY9pJF0k=\", false, function () {\n  return [useUser, useChat];\n});\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","Chat","Sidebar","NewRoom","chatHttp","RoomDetails","useChat","GeneralSnackbar","messageAudio","useUser","USER_INITIAL_VALUE","jsxDEV","_jsxDEV","audio","Audio","Room","history","_s","userDetails","setUserDetails","openModal","setOpenModal","openSnackbar","setOpenSnackbar","snackbarMsg","rooms","setRooms","roomCode","setRoomCode","chatSocket","updateUnread","room","willReset","userIndex","users","findIndex","roomUser","user","username","unread","code","console","log","init","getRooms","then","data","forEach","join","name","catch","response","status","localStorage","clear","push","joinSubscription","onJoin","subscribe","joinedRoom","window","location","reload","leaveSubscription","onLeave","leftRoom","unsubscribe","deleteSubscription","onRoomDelete","deletedRoom","messageSubscription","onMessage","event","newMsg","updatedRoom","warn","prevRooms","newRooms","roomIndex","play","getCurrentRoom","find","handleRoomClick","handleRoomLeave","filter","handleModalClose","className","children","onNewRoom","onRoomClick","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","roomDetails","onRoomLeave","length","open","onClose","message","current","_c","$RefreshReg$"],"sources":["/media/tina/0ED49F87D49F7027/1_SIT_2024Fall/CS554/project/chat-frontend-main/src/components/Room/index.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport './style.css';\nimport Chat from '../Chat';\nimport Sidebar from '../Sidebar';\nimport NewRoom from '../NewRoom';\nimport chatHttp from '../../services/Http';\nimport RoomDetails from '../RoomDetails';\nimport { useChat } from '../../context/ChatContext';\nimport GeneralSnackbar from '../GeneralSnackbar';\nimport messageAudio from '../../assets/audio/message.mp3';\nimport { useUser } from '../../context/UserContext';\nimport { USER_INITIAL_VALUE } from '../../constants';\nimport { useHistory } from 'react-router-dom';\nimport { JoinEventResp, LeaveEventResp, RoomPopulated, RoomUserPopulated, MessageEventResp } from '../../types';\n\nexport interface RoomProps {\n\thistory: ReturnType<typeof useHistory>;\n}\n\nconst audio = new Audio(messageAudio);\n\nconst Room = ({ history }: RoomProps) => {\n\tconst { userDetails, setUserDetails } = useUser();\n\tconst [ openModal, setOpenModal ] = useState(false);\n\tconst [ openSnackbar, setOpenSnackbar ] = useState(false);\n\tconst snackbarMsg = useRef('');\n\tconst [ rooms, setRooms ] = useState([] as RoomPopulated[]);\n\tconst [ roomCode, setRoomCode ] = useState('');\n\tconst chatSocket = useChat();\n\n\tconst updateUnread = useCallback(\n\t\t(room: RoomPopulated, willReset: boolean) => {\n\t\t\tconst userIndex = room.users.findIndex(\n\t\t\t\t(roomUser: RoomUserPopulated) => roomUser.user.username === userDetails.username\n\t\t\t);\n\t\t\troom.users[userIndex].unread = willReset ? 0 : ++room.users[userIndex].unread;\n\t\t\tchatSocket.updateUnread(room.users[userIndex].unread, room.code, userDetails.username);\n\t\t\treturn room;\n\t\t},\n\t\t[ chatSocket, userDetails.username ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconsole.log('Initializing Socket Context..');\n\t\t\tchatSocket.init();\n\t\t\tchatHttp\n\t\t\t\t.getRooms()\n\t\t\t\t.then(({ data }) => {\n\t\t\t\t\tsetRooms(() => {\n\t\t\t\t\t\tif (data.rooms[0]) data.rooms[0] = updateUnread(data.rooms[0], true);\n\t\t\t\t\t\treturn data.rooms;\n\t\t\t\t\t});\n\t\t\t\t\tif (data.rooms[0]) {\n\t\t\t\t\t\tsetRoomCode(data.rooms[0].code);\n\t\t\t\t\t\tdata.rooms.forEach((room: RoomPopulated) => {\n\t\t\t\t\t\t\tchatSocket.join({ name: userDetails.username || '', room: room.code });\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(({ response }) => {\n\t\t\t\t\tif (response.status === 401) {\n\t\t\t\t\t\tlocalStorage.clear();\n\t\t\t\t\t\tsetUserDetails(USER_INITIAL_VALUE);\n\t\t\t\t\t\thistory.push('/login');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t},\n\t\t[ history, chatSocket, userDetails.username, setUserDetails, updateUnread ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (chatSocket === null) return;\n\t\t\tconst joinSubscription = chatSocket.onJoin().subscribe(({ userDetails, joinedRoom }: JoinEventResp) => {\n\t\t\t\twindow.location.reload();\n\t\t\t});\n\t\t\tconst leaveSubscription = chatSocket.onLeave().subscribe(({ userDetails, leftRoom }: LeaveEventResp) => {\n\t\t\t\twindow.location.reload();\n\t\t\t});\n\t\t\treturn () => {\n\t\t\t\tjoinSubscription.unsubscribe();\n\t\t\t\tleaveSubscription.unsubscribe();\n\t\t\t};\n\t\t},\n\t\t[ chatSocket ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (chatSocket === null) return;\n\t\t\tconst deleteSubscription = chatSocket.onRoomDelete().subscribe((deletedRoom: string) => {\n\t\t\t\twindow.location.reload();\n\t\t\t});\n\t\t\t\n\t\t\tconst messageSubscription = chatSocket.onMessage().subscribe((event: MessageEventResp) => {\n\t\t\t\tif (!event) {\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { newMsg, updatedRoom } = event;\n\t\t\t\tif (!newMsg?.roomCode) {\n\t\t\t\t\tconsole.warn('Invalid message format:', event);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsetRooms((prevRooms: RoomPopulated[]) => {\n\t\t\t\t\tconst newRooms = [...prevRooms];\n\t\t\t\t\tconst roomIndex = newRooms.findIndex((room: RoomPopulated) => \n\t\t\t\t\t\troom.code === newMsg.roomCode\n\t\t\t\t\t);\n\t\t\t\t\t\n\t\t\t\t\tif (roomIndex >= 0) {\n\t\t\t\t\t\tif (updatedRoom) {\n\t\t\t\t\t\t\tnewRooms[roomIndex] = updatedRoom;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (newMsg.roomCode !== roomCode) {\n\t\t\t\t\t\t\tnewRooms[roomIndex] = updateUnread(newRooms[roomIndex], false);\n\t\t\t\t\t\t\taudio.play();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn newRooms;\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn () => {\n\t\t\t\tdeleteSubscription.unsubscribe();\n\t\t\t\tmessageSubscription.unsubscribe();\n\t\t\t};\n\t\t},\n\t\t[ chatSocket, roomCode, userDetails.username, updateUnread ]\n\t);\n\n\tconst getCurrentRoom = () => {\n\t\treturn rooms.find((room: RoomPopulated) => room.code === roomCode);\n\t};\n\n\tconst handleRoomClick = (code: string) => {\n\t\tsetRoomCode(code);\n\t\tsetRooms((prevRooms: RoomPopulated[]) => {\n\t\t\tconst newRooms = [ ...prevRooms ];\n\t\t\tconst roomIndex = newRooms.findIndex((room: RoomPopulated) => room.code === code);\n\t\t\tnewRooms[roomIndex] = updateUnread(newRooms[roomIndex], true);\n\t\t\treturn newRooms;\n\t\t});\n\t};\n\n\tconst handleRoomLeave = (code: string) => {\n\t\tsetRoomCode('');\n\t\tsetRooms(rooms.filter((room: RoomPopulated) => room.code !== code));\n\t};\n\n\tconst handleModalClose = (room: RoomPopulated | null) => {\n\t\tif (room) {\n\t\t\tsetRooms([ ...rooms, room ]);\n\t\t\tsetRoomCode(room.code);\n\t\t}\n\t\tsetOpenModal(false);\n\t};\n\n\treturn (\n\t\t<div className=\"room\">\n\t\t\t<Sidebar onNewRoom={() => setOpenModal(true)} rooms={rooms} history={history} onRoomClick={handleRoomClick} />\n\t\t\t{roomCode ? (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<Chat roomCode={roomCode} />\n\t\t\t\t\t<RoomDetails roomDetails={getCurrentRoom()!} onRoomLeave={handleRoomLeave} />\n\t\t\t\t</React.Fragment>\n\t\t\t) : (\n\t\t\t\t<div className=\"chat chat--no-room\">\n\t\t\t\t\t<div className=\"chat__header\" />\n\t\t\t\t\t<div className=\"chat__body\">\n\t\t\t\t\t\t<p className=\"header__text\">\n\t\t\t\t\t\t\t{rooms.length > 0 ? 'Click a room to start chatting!' : 'Create or Join a room to start a conversation!'}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t<NewRoom open={openModal} onClose={handleModalClose} />\n\t\t\t<GeneralSnackbar message={snackbarMsg.current} open={openSnackbar} onClose={() => setOpenSnackbar(false)} />\n\t\t</div>\n\t);\n};\n\nexport default Room;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}