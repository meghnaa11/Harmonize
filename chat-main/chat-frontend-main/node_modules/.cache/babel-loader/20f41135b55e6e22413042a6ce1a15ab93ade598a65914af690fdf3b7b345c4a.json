{"ast":null,"code":"var _jsxFileName = \"/media/tina/0ED49F87D49F7027/1_SIT_2024Fall/CS554/project/chat-frontend-main/src/components/Room/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useCallback } from 'react';\nimport './style.css';\nimport Chat from '../Chat';\nimport Sidebar from '../Sidebar';\nimport NewRoom from '../NewRoom';\nimport chatHttp from '../../services/Http';\nimport RoomDetails from '../RoomDetails';\nimport { useChat } from '../../context/ChatContext';\nimport GeneralSnackbar from '../GeneralSnackbar';\nimport messageAudio from '../../assets/audio/message.mp3';\nimport { useUser } from '../../context/UserContext';\nimport { USER_INITIAL_VALUE } from '../../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst audio = new Audio(messageAudio);\n\n// Add these interfaces at the top of the file with your other types\n\nconst Room = ({\n  history\n}) => {\n  _s();\n  const {\n    userDetails,\n    setUserDetails\n  } = useUser();\n  const [openModal, setOpenModal] = useState(false);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n  const snackbarMsg = useRef('');\n  const [rooms, setRooms] = useState([]);\n  const [roomCode, setRoomCode] = useState('');\n  const chatSocket = useChat();\n  const updateUnread = useCallback((room, willReset) => {\n    const userIndex = room.users.findIndex(roomUser => roomUser.user.username === userDetails.username);\n    room.users[userIndex].unread = willReset ? 0 : ++room.users[userIndex].unread;\n    chatSocket.updateUnread(room.users[userIndex].unread, room.code, userDetails.username);\n    return room;\n  }, [chatSocket, userDetails.username]);\n  useEffect(() => {\n    console.log('Initializing Socket Context..');\n    chatSocket.init();\n    chatHttp.getRooms().then(({\n      data\n    }) => {\n      setRooms(() => {\n        if (data.rooms[0]) data.rooms[0] = updateUnread(data.rooms[0], true);\n        return data.rooms;\n      });\n      if (data.rooms[0]) {\n        setRoomCode(data.rooms[0].code);\n        data.rooms.forEach(room => {\n          chatSocket.join({\n            name: userDetails.username || '',\n            room: room.code\n          });\n        });\n      }\n    }).catch(({\n      response\n    }) => {\n      if (response.status === 401) {\n        localStorage.clear();\n        setUserDetails(USER_INITIAL_VALUE);\n        history.push('/login');\n      }\n    });\n  }, [history, chatSocket, userDetails.username, setUserDetails, updateUnread]);\n  useEffect(() => {\n    if (chatSocket === null) return;\n    const joinSubscription = chatSocket.onJoin().subscribe(({\n      userDetails,\n      joinedRoom\n    }) => {\n      setRooms(prevRooms => {\n        const newRooms = [...prevRooms];\n        const roomIndex = newRooms.findIndex(room => room.code === joinedRoom);\n        if (roomIndex >= 0) newRooms[roomIndex].users.push({\n          user: userDetails,\n          unread: 0\n        });\n        return newRooms;\n      });\n    });\n    const leaveSubscription = chatSocket.onLeave().subscribe(({\n      userDetails,\n      leftRoom\n    }) => {\n      setRooms(prevRooms => {\n        const newRooms = [...prevRooms];\n        const roomIndex = newRooms.findIndex(room => room.code === leftRoom);\n        if (roomIndex >= 0) {\n          newRooms[roomIndex].users = newRooms[roomIndex].users.filter(roomUser => roomUser.user.username !== userDetails.username);\n        }\n        return newRooms;\n      });\n    });\n    return () => {\n      joinSubscription.unsubscribe();\n      leaveSubscription.unsubscribe();\n    };\n  }, [chatSocket]);\n  useEffect(() => {\n    if (chatSocket === null) return;\n    const deleteSubscription = chatSocket.onRoomDelete().subscribe(deletedRoom => {\n      snackbarMsg.current = `Room ${deletedRoom} has been deleted.`;\n      setOpenSnackbar(true);\n      if (roomCode === deletedRoom) setRoomCode('');\n      setRooms(prevRooms => prevRooms.filter(room => room.code !== deletedRoom));\n    });\n    const messageSubscription = chatSocket.onMessage().subscribe(event => {\n      // Validate the entire event object\n      if (!event || !event.newMsg || !event.newMsg.roomCode) {\n        console.warn('Received invalid message event:', event);\n        return;\n      }\n      setRooms(prevRooms => {\n        const newRooms = [...prevRooms];\n        const roomIndex = newRooms.findIndex(room => room.code === event.newMsg.roomCode);\n        if (roomIndex >= 0) {\n          if (event.updatedRoom) newRooms[roomIndex] = event.updatedRoom;\n          if (event.newMsg.roomCode !== roomCode) {\n            newRooms[roomIndex] = updateUnread(newRooms[roomIndex], false);\n            audio.play();\n          }\n        }\n        return newRooms;\n      });\n    });\n    return () => {\n      deleteSubscription.unsubscribe();\n      messageSubscription.unsubscribe();\n    };\n  }, [chatSocket, roomCode, userDetails.username, updateUnread]);\n  const getCurrentRoom = () => {\n    return rooms.find(room => room.code === roomCode);\n  };\n  const handleRoomClick = code => {\n    setRoomCode(code);\n    setRooms(prevRooms => {\n      const newRooms = [...prevRooms];\n      const roomIndex = newRooms.findIndex(room => room.code === code);\n      newRooms[roomIndex] = updateUnread(newRooms[roomIndex], true);\n      return newRooms;\n    });\n  };\n  const handleRoomLeave = code => {\n    setRoomCode('');\n    setRooms(rooms.filter(room => room.code !== code));\n  };\n  const handleModalClose = room => {\n    if (room) {\n      setRooms([...rooms, room]);\n      setRoomCode(room.code);\n    }\n    setOpenModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onNewRoom: () => setOpenModal(true),\n      rooms: rooms,\n      history: history,\n      onRoomClick: handleRoomClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 4\n    }, this), roomCode ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Chat, {\n        roomCode: roomCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(RoomDetails, {\n        roomDetails: getCurrentRoom(),\n        onRoomLeave: handleRoomLeave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat chat--no-room\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__body\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header__text\",\n          children: rooms.length > 0 ? 'Click a room to start chatting!' : 'Create or Join a room to start a conversation!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(NewRoom, {\n      open: openModal,\n      onClose: handleModalClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(GeneralSnackbar, {\n      message: snackbarMsg.current,\n      open: openSnackbar,\n      onClose: () => setOpenSnackbar(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 3\n  }, this);\n};\n_s(Room, \"DLcEK+24j/+ADfwrC1OpY9pJF0k=\", false, function () {\n  return [useUser, useChat];\n});\n_c = Room;\nexport default Room;\nvar _c;\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","Chat","Sidebar","NewRoom","chatHttp","RoomDetails","useChat","GeneralSnackbar","messageAudio","useUser","USER_INITIAL_VALUE","jsxDEV","_jsxDEV","audio","Audio","Room","history","_s","userDetails","setUserDetails","openModal","setOpenModal","openSnackbar","setOpenSnackbar","snackbarMsg","rooms","setRooms","roomCode","setRoomCode","chatSocket","updateUnread","room","willReset","userIndex","users","findIndex","roomUser","user","username","unread","code","console","log","init","getRooms","then","data","forEach","join","name","catch","response","status","localStorage","clear","push","joinSubscription","onJoin","subscribe","joinedRoom","prevRooms","newRooms","roomIndex","leaveSubscription","onLeave","leftRoom","filter","unsubscribe","deleteSubscription","onRoomDelete","deletedRoom","current","messageSubscription","onMessage","event","newMsg","warn","updatedRoom","play","getCurrentRoom","find","handleRoomClick","handleRoomLeave","handleModalClose","className","children","onNewRoom","onRoomClick","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","roomDetails","onRoomLeave","length","open","onClose","message","_c","$RefreshReg$"],"sources":["/media/tina/0ED49F87D49F7027/1_SIT_2024Fall/CS554/project/chat-frontend-main/src/components/Room/index.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport './style.css';\nimport Chat from '../Chat';\nimport Sidebar from '../Sidebar';\nimport NewRoom from '../NewRoom';\nimport chatHttp from '../../services/Http';\nimport RoomDetails from '../RoomDetails';\nimport { useChat } from '../../context/ChatContext';\nimport GeneralSnackbar from '../GeneralSnackbar';\nimport messageAudio from '../../assets/audio/message.mp3';\nimport { useUser } from '../../context/UserContext';\nimport { USER_INITIAL_VALUE } from '../../constants';\nimport { useHistory } from 'react-router-dom';\nimport { JoinEventResp, LeaveEventResp, RoomPopulated, RoomUserPopulated } from '../../types';\n\nexport interface RoomProps {\n\thistory: ReturnType<typeof useHistory>;\n}\n\nconst audio = new Audio(messageAudio);\n\n// Add these interfaces at the top of the file with your other types\ninterface ChatMessage {\n\troomCode: string;\n\t// add other message properties as needed\n}\n\ninterface MessageEvent {\n\tnewMsg: ChatMessage;\n\tupdatedRoom?: RoomPopulated;\n}\n\nconst Room = ({ history }: RoomProps) => {\n\tconst { userDetails, setUserDetails } = useUser();\n\tconst [ openModal, setOpenModal ] = useState(false);\n\tconst [ openSnackbar, setOpenSnackbar ] = useState(false);\n\tconst snackbarMsg = useRef('');\n\tconst [ rooms, setRooms ] = useState([] as RoomPopulated[]);\n\tconst [ roomCode, setRoomCode ] = useState('');\n\tconst chatSocket = useChat();\n\n\tconst updateUnread = useCallback(\n\t\t(room: RoomPopulated, willReset: boolean) => {\n\t\t\tconst userIndex = room.users.findIndex(\n\t\t\t\t(roomUser: RoomUserPopulated) => roomUser.user.username === userDetails.username\n\t\t\t);\n\t\t\troom.users[userIndex].unread = willReset ? 0 : ++room.users[userIndex].unread;\n\t\t\tchatSocket.updateUnread(room.users[userIndex].unread, room.code, userDetails.username);\n\t\t\treturn room;\n\t\t},\n\t\t[ chatSocket, userDetails.username ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconsole.log('Initializing Socket Context..');\n\t\t\tchatSocket.init();\n\t\t\tchatHttp\n\t\t\t\t.getRooms()\n\t\t\t\t.then(({ data }) => {\n\t\t\t\t\tsetRooms(() => {\n\t\t\t\t\t\tif (data.rooms[0]) data.rooms[0] = updateUnread(data.rooms[0], true);\n\t\t\t\t\t\treturn data.rooms;\n\t\t\t\t\t});\n\t\t\t\t\tif (data.rooms[0]) {\n\t\t\t\t\t\tsetRoomCode(data.rooms[0].code);\n\t\t\t\t\t\tdata.rooms.forEach((room: RoomPopulated) => {\n\t\t\t\t\t\t\tchatSocket.join({ name: userDetails.username || '', room: room.code });\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(({ response }) => {\n\t\t\t\t\tif (response.status === 401) {\n\t\t\t\t\t\tlocalStorage.clear();\n\t\t\t\t\t\tsetUserDetails(USER_INITIAL_VALUE);\n\t\t\t\t\t\thistory.push('/login');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t},\n\t\t[ history, chatSocket, userDetails.username, setUserDetails, updateUnread ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (chatSocket === null) return;\n\t\t\tconst joinSubscription = chatSocket.onJoin().subscribe(({ userDetails, joinedRoom }: JoinEventResp) => {\n\t\t\t\tsetRooms((prevRooms: RoomPopulated[]) => {\n\t\t\t\t\tconst newRooms = [ ...prevRooms ];\n\t\t\t\t\tconst roomIndex = newRooms.findIndex((room: RoomPopulated) => room.code === joinedRoom);\n\t\t\t\t\tif (roomIndex >= 0) newRooms[roomIndex].users.push({ user: userDetails, unread: 0 });\n\t\t\t\t\treturn newRooms;\n\t\t\t\t});\n\t\t\t});\n\t\t\tconst leaveSubscription = chatSocket.onLeave().subscribe(({ userDetails, leftRoom }: LeaveEventResp) => {\n\t\t\t\tsetRooms((prevRooms: RoomPopulated[]) => {\n\t\t\t\t\tconst newRooms = [ ...prevRooms ];\n\t\t\t\t\tconst roomIndex = newRooms.findIndex((room: RoomPopulated) => room.code === leftRoom);\n\t\t\t\t\tif (roomIndex >= 0) {\n\t\t\t\t\t\tnewRooms[roomIndex].users = newRooms[roomIndex].users.filter(\n\t\t\t\t\t\t\t(roomUser: RoomUserPopulated) => roomUser.user.username !== userDetails.username\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn newRooms;\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn () => {\n\t\t\t\tjoinSubscription.unsubscribe();\n\t\t\t\tleaveSubscription.unsubscribe();\n\t\t\t};\n\t\t},\n\t\t[ chatSocket ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (chatSocket === null) return;\n\t\t\tconst deleteSubscription = chatSocket.onRoomDelete().subscribe((deletedRoom: string) => {\n\t\t\t\tsnackbarMsg.current = `Room ${deletedRoom} has been deleted.`;\n\t\t\t\tsetOpenSnackbar(true);\n\t\t\t\tif (roomCode === deletedRoom) setRoomCode('');\n\t\t\t\tsetRooms((prevRooms: RoomPopulated[]) => prevRooms.filter((room: RoomPopulated) => room.code !== deletedRoom));\n\t\t\t});\n\t\t\tconst messageSubscription = chatSocket.onMessage().subscribe((event: MessageEvent) => {\n\t\t\t\t// Validate the entire event object\n\t\t\t\tif (!event || !event.newMsg || !event.newMsg.roomCode) {\n\t\t\t\t\tconsole.warn('Received invalid message event:', event);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tsetRooms((prevRooms: RoomPopulated[]) => {\n\t\t\t\t\tconst newRooms = [...prevRooms];\n\t\t\t\t\tconst roomIndex = newRooms.findIndex((room: RoomPopulated) => room.code === event.newMsg.roomCode);\n\t\t\t\t\tif (roomIndex >= 0) {\n\t\t\t\t\t\tif (event.updatedRoom) newRooms[roomIndex] = event.updatedRoom;\n\t\t\t\t\t\tif (event.newMsg.roomCode !== roomCode) {\n\t\t\t\t\t\t\tnewRooms[roomIndex] = updateUnread(newRooms[roomIndex], false);\n\t\t\t\t\t\t\taudio.play();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn newRooms;\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn () => {\n\t\t\t\tdeleteSubscription.unsubscribe();\n\t\t\t\tmessageSubscription.unsubscribe();\n\t\t\t};\n\t\t},\n\t\t[ chatSocket, roomCode, userDetails.username, updateUnread ]\n\t);\n\n\tconst getCurrentRoom = () => {\n\t\treturn rooms.find((room: RoomPopulated) => room.code === roomCode);\n\t};\n\n\tconst handleRoomClick = (code: string) => {\n\t\tsetRoomCode(code);\n\t\tsetRooms((prevRooms: RoomPopulated[]) => {\n\t\t\tconst newRooms = [ ...prevRooms ];\n\t\t\tconst roomIndex = newRooms.findIndex((room: RoomPopulated) => room.code === code);\n\t\t\tnewRooms[roomIndex] = updateUnread(newRooms[roomIndex], true);\n\t\t\treturn newRooms;\n\t\t});\n\t};\n\n\tconst handleRoomLeave = (code: string) => {\n\t\tsetRoomCode('');\n\t\tsetRooms(rooms.filter((room: RoomPopulated) => room.code !== code));\n\t};\n\n\tconst handleModalClose = (room: RoomPopulated | null) => {\n\t\tif (room) {\n\t\t\tsetRooms([ ...rooms, room ]);\n\t\t\tsetRoomCode(room.code);\n\t\t}\n\t\tsetOpenModal(false);\n\t};\n\n\treturn (\n\t\t<div className=\"room\">\n\t\t\t<Sidebar onNewRoom={() => setOpenModal(true)} rooms={rooms} history={history} onRoomClick={handleRoomClick} />\n\t\t\t{roomCode ? (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<Chat roomCode={roomCode} />\n\t\t\t\t\t<RoomDetails roomDetails={getCurrentRoom()!} onRoomLeave={handleRoomLeave} />\n\t\t\t\t</React.Fragment>\n\t\t\t) : (\n\t\t\t\t<div className=\"chat chat--no-room\">\n\t\t\t\t\t<div className=\"chat__header\" />\n\t\t\t\t\t<div className=\"chat__body\">\n\t\t\t\t\t\t<p className=\"header__text\">\n\t\t\t\t\t\t\t{rooms.length > 0 ? 'Click a room to start chatting!' : 'Create or Join a room to start a conversation!'}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t<NewRoom open={openModal} onClose={handleModalClose} />\n\t\t\t<GeneralSnackbar message={snackbarMsg.current} open={openSnackbar} onClose={() => setOpenSnackbar(false)} />\n\t\t</div>\n\t);\n};\n\nexport default Room;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAO,aAAa;AACpB,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,WAAW,MAAM,gBAAgB;AACxC,SAASC,OAAO,QAAQ,2BAA2B;AACnD,OAAOC,eAAe,MAAM,oBAAoB;AAChD,OAAOC,YAAY,MAAM,gCAAgC;AACzD,SAASC,OAAO,QAAQ,2BAA2B;AACnD,SAASC,kBAAkB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQrD,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAACN,YAAY,CAAC;;AAErC;;AAWA,MAAMO,IAAI,GAAGA,CAAC;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM;IAAEC,WAAW;IAAEC;EAAe,CAAC,GAAGV,OAAO,CAAC,CAAC;EACjD,MAAM,CAAEW,SAAS,EAAEC,YAAY,CAAE,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAEwB,YAAY,EAAEC,eAAe,CAAE,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM0B,WAAW,GAAGzB,MAAM,CAAC,EAAE,CAAC;EAC9B,MAAM,CAAE0B,KAAK,EAAEC,QAAQ,CAAE,GAAG5B,QAAQ,CAAC,EAAqB,CAAC;EAC3D,MAAM,CAAE6B,QAAQ,EAAEC,WAAW,CAAE,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM+B,UAAU,GAAGvB,OAAO,CAAC,CAAC;EAE5B,MAAMwB,YAAY,GAAG9B,WAAW,CAC/B,CAAC+B,IAAmB,EAAEC,SAAkB,KAAK;IAC5C,MAAMC,SAAS,GAAGF,IAAI,CAACG,KAAK,CAACC,SAAS,CACpCC,QAA2B,IAAKA,QAAQ,CAACC,IAAI,CAACC,QAAQ,KAAKpB,WAAW,CAACoB,QACzE,CAAC;IACDP,IAAI,CAACG,KAAK,CAACD,SAAS,CAAC,CAACM,MAAM,GAAGP,SAAS,GAAG,CAAC,GAAG,EAAED,IAAI,CAACG,KAAK,CAACD,SAAS,CAAC,CAACM,MAAM;IAC7EV,UAAU,CAACC,YAAY,CAACC,IAAI,CAACG,KAAK,CAACD,SAAS,CAAC,CAACM,MAAM,EAAER,IAAI,CAACS,IAAI,EAAEtB,WAAW,CAACoB,QAAQ,CAAC;IACtF,OAAOP,IAAI;EACZ,CAAC,EACD,CAAEF,UAAU,EAAEX,WAAW,CAACoB,QAAQ,CACnC,CAAC;EAEDzC,SAAS,CACR,MAAM;IACL4C,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC5Cb,UAAU,CAACc,IAAI,CAAC,CAAC;IACjBvC,QAAQ,CACNwC,QAAQ,CAAC,CAAC,CACVC,IAAI,CAAC,CAAC;MAAEC;IAAK,CAAC,KAAK;MACnBpB,QAAQ,CAAC,MAAM;QACd,IAAIoB,IAAI,CAACrB,KAAK,CAAC,CAAC,CAAC,EAAEqB,IAAI,CAACrB,KAAK,CAAC,CAAC,CAAC,GAAGK,YAAY,CAACgB,IAAI,CAACrB,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;QACpE,OAAOqB,IAAI,CAACrB,KAAK;MAClB,CAAC,CAAC;MACF,IAAIqB,IAAI,CAACrB,KAAK,CAAC,CAAC,CAAC,EAAE;QAClBG,WAAW,CAACkB,IAAI,CAACrB,KAAK,CAAC,CAAC,CAAC,CAACe,IAAI,CAAC;QAC/BM,IAAI,CAACrB,KAAK,CAACsB,OAAO,CAAEhB,IAAmB,IAAK;UAC3CF,UAAU,CAACmB,IAAI,CAAC;YAAEC,IAAI,EAAE/B,WAAW,CAACoB,QAAQ,IAAI,EAAE;YAAEP,IAAI,EAAEA,IAAI,CAACS;UAAK,CAAC,CAAC;QACvE,CAAC,CAAC;MACH;IACD,CAAC,CAAC,CACDU,KAAK,CAAC,CAAC;MAAEC;IAAS,CAAC,KAAK;MACxB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC5BC,YAAY,CAACC,KAAK,CAAC,CAAC;QACpBnC,cAAc,CAACT,kBAAkB,CAAC;QAClCM,OAAO,CAACuC,IAAI,CAAC,QAAQ,CAAC;MACvB;IACD,CAAC,CAAC;EACJ,CAAC,EACD,CAAEvC,OAAO,EAAEa,UAAU,EAAEX,WAAW,CAACoB,QAAQ,EAAEnB,cAAc,EAAEW,YAAY,CAC1E,CAAC;EAEDjC,SAAS,CACR,MAAM;IACL,IAAIgC,UAAU,KAAK,IAAI,EAAE;IACzB,MAAM2B,gBAAgB,GAAG3B,UAAU,CAAC4B,MAAM,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC;MAAExC,WAAW;MAAEyC;IAA0B,CAAC,KAAK;MACtGjC,QAAQ,CAAEkC,SAA0B,IAAK;QACxC,MAAMC,QAAQ,GAAG,CAAE,GAAGD,SAAS,CAAE;QACjC,MAAME,SAAS,GAAGD,QAAQ,CAAC1B,SAAS,CAAEJ,IAAmB,IAAKA,IAAI,CAACS,IAAI,KAAKmB,UAAU,CAAC;QACvF,IAAIG,SAAS,IAAI,CAAC,EAAED,QAAQ,CAACC,SAAS,CAAC,CAAC5B,KAAK,CAACqB,IAAI,CAAC;UAAElB,IAAI,EAAEnB,WAAW;UAAEqB,MAAM,EAAE;QAAE,CAAC,CAAC;QACpF,OAAOsB,QAAQ;MAChB,CAAC,CAAC;IACH,CAAC,CAAC;IACF,MAAME,iBAAiB,GAAGlC,UAAU,CAACmC,OAAO,CAAC,CAAC,CAACN,SAAS,CAAC,CAAC;MAAExC,WAAW;MAAE+C;IAAyB,CAAC,KAAK;MACvGvC,QAAQ,CAAEkC,SAA0B,IAAK;QACxC,MAAMC,QAAQ,GAAG,CAAE,GAAGD,SAAS,CAAE;QACjC,MAAME,SAAS,GAAGD,QAAQ,CAAC1B,SAAS,CAAEJ,IAAmB,IAAKA,IAAI,CAACS,IAAI,KAAKyB,QAAQ,CAAC;QACrF,IAAIH,SAAS,IAAI,CAAC,EAAE;UACnBD,QAAQ,CAACC,SAAS,CAAC,CAAC5B,KAAK,GAAG2B,QAAQ,CAACC,SAAS,CAAC,CAAC5B,KAAK,CAACgC,MAAM,CAC1D9B,QAA2B,IAAKA,QAAQ,CAACC,IAAI,CAACC,QAAQ,KAAKpB,WAAW,CAACoB,QACzE,CAAC;QACF;QACA,OAAOuB,QAAQ;MAChB,CAAC,CAAC;IACH,CAAC,CAAC;IACF,OAAO,MAAM;MACZL,gBAAgB,CAACW,WAAW,CAAC,CAAC;MAC9BJ,iBAAiB,CAACI,WAAW,CAAC,CAAC;IAChC,CAAC;EACF,CAAC,EACD,CAAEtC,UAAU,CACb,CAAC;EAEDhC,SAAS,CACR,MAAM;IACL,IAAIgC,UAAU,KAAK,IAAI,EAAE;IACzB,MAAMuC,kBAAkB,GAAGvC,UAAU,CAACwC,YAAY,CAAC,CAAC,CAACX,SAAS,CAAEY,WAAmB,IAAK;MACvF9C,WAAW,CAAC+C,OAAO,GAAG,QAAQD,WAAW,oBAAoB;MAC7D/C,eAAe,CAAC,IAAI,CAAC;MACrB,IAAII,QAAQ,KAAK2C,WAAW,EAAE1C,WAAW,CAAC,EAAE,CAAC;MAC7CF,QAAQ,CAAEkC,SAA0B,IAAKA,SAAS,CAACM,MAAM,CAAEnC,IAAmB,IAAKA,IAAI,CAACS,IAAI,KAAK8B,WAAW,CAAC,CAAC;IAC/G,CAAC,CAAC;IACF,MAAME,mBAAmB,GAAG3C,UAAU,CAAC4C,SAAS,CAAC,CAAC,CAACf,SAAS,CAAEgB,KAAmB,IAAK;MACrF;MACA,IAAI,CAACA,KAAK,IAAI,CAACA,KAAK,CAACC,MAAM,IAAI,CAACD,KAAK,CAACC,MAAM,CAAChD,QAAQ,EAAE;QACtDc,OAAO,CAACmC,IAAI,CAAC,iCAAiC,EAAEF,KAAK,CAAC;QACtD;MACD;MAEAhD,QAAQ,CAAEkC,SAA0B,IAAK;QACxC,MAAMC,QAAQ,GAAG,CAAC,GAAGD,SAAS,CAAC;QAC/B,MAAME,SAAS,GAAGD,QAAQ,CAAC1B,SAAS,CAAEJ,IAAmB,IAAKA,IAAI,CAACS,IAAI,KAAKkC,KAAK,CAACC,MAAM,CAAChD,QAAQ,CAAC;QAClG,IAAImC,SAAS,IAAI,CAAC,EAAE;UACnB,IAAIY,KAAK,CAACG,WAAW,EAAEhB,QAAQ,CAACC,SAAS,CAAC,GAAGY,KAAK,CAACG,WAAW;UAC9D,IAAIH,KAAK,CAACC,MAAM,CAAChD,QAAQ,KAAKA,QAAQ,EAAE;YACvCkC,QAAQ,CAACC,SAAS,CAAC,GAAGhC,YAAY,CAAC+B,QAAQ,CAACC,SAAS,CAAC,EAAE,KAAK,CAAC;YAC9DjD,KAAK,CAACiE,IAAI,CAAC,CAAC;UACb;QACD;QACA,OAAOjB,QAAQ;MAChB,CAAC,CAAC;IACH,CAAC,CAAC;IACF,OAAO,MAAM;MACZO,kBAAkB,CAACD,WAAW,CAAC,CAAC;MAChCK,mBAAmB,CAACL,WAAW,CAAC,CAAC;IAClC,CAAC;EACF,CAAC,EACD,CAAEtC,UAAU,EAAEF,QAAQ,EAAET,WAAW,CAACoB,QAAQ,EAAER,YAAY,CAC3D,CAAC;EAED,MAAMiD,cAAc,GAAGA,CAAA,KAAM;IAC5B,OAAOtD,KAAK,CAACuD,IAAI,CAAEjD,IAAmB,IAAKA,IAAI,CAACS,IAAI,KAAKb,QAAQ,CAAC;EACnE,CAAC;EAED,MAAMsD,eAAe,GAAIzC,IAAY,IAAK;IACzCZ,WAAW,CAACY,IAAI,CAAC;IACjBd,QAAQ,CAAEkC,SAA0B,IAAK;MACxC,MAAMC,QAAQ,GAAG,CAAE,GAAGD,SAAS,CAAE;MACjC,MAAME,SAAS,GAAGD,QAAQ,CAAC1B,SAAS,CAAEJ,IAAmB,IAAKA,IAAI,CAACS,IAAI,KAAKA,IAAI,CAAC;MACjFqB,QAAQ,CAACC,SAAS,CAAC,GAAGhC,YAAY,CAAC+B,QAAQ,CAACC,SAAS,CAAC,EAAE,IAAI,CAAC;MAC7D,OAAOD,QAAQ;IAChB,CAAC,CAAC;EACH,CAAC;EAED,MAAMqB,eAAe,GAAI1C,IAAY,IAAK;IACzCZ,WAAW,CAAC,EAAE,CAAC;IACfF,QAAQ,CAACD,KAAK,CAACyC,MAAM,CAAEnC,IAAmB,IAAKA,IAAI,CAACS,IAAI,KAAKA,IAAI,CAAC,CAAC;EACpE,CAAC;EAED,MAAM2C,gBAAgB,GAAIpD,IAA0B,IAAK;IACxD,IAAIA,IAAI,EAAE;MACTL,QAAQ,CAAC,CAAE,GAAGD,KAAK,EAAEM,IAAI,CAAE,CAAC;MAC5BH,WAAW,CAACG,IAAI,CAACS,IAAI,CAAC;IACvB;IACAnB,YAAY,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,oBACCT,OAAA;IAAKwE,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACpBzE,OAAA,CAACV,OAAO;MAACoF,SAAS,EAAEA,CAAA,KAAMjE,YAAY,CAAC,IAAI,CAAE;MAACI,KAAK,EAAEA,KAAM;MAACT,OAAO,EAAEA,OAAQ;MAACuE,WAAW,EAAEN;IAAgB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC7GhE,QAAQ,gBACRf,OAAA,CAAChB,KAAK,CAACgG,QAAQ;MAAAP,QAAA,gBACdzE,OAAA,CAACX,IAAI;QAAC0B,QAAQ,EAAEA;MAAS;QAAA6D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5B/E,OAAA,CAACP,WAAW;QAACwF,WAAW,EAAEd,cAAc,CAAC,CAAG;QAACe,WAAW,EAAEZ;MAAgB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,gBAEjB/E,OAAA;MAAKwE,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAClCzE,OAAA;QAAKwE,SAAS,EAAC;MAAc;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChC/E,OAAA;QAAKwE,SAAS,EAAC,YAAY;QAAAC,QAAA,eAC1BzE,OAAA;UAAGwE,SAAS,EAAC,cAAc;UAAAC,QAAA,EACzB5D,KAAK,CAACsE,MAAM,GAAG,CAAC,GAAG,iCAAiC,GAAG;QAAgD;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACL,eAED/E,OAAA,CAACT,OAAO;MAAC6F,IAAI,EAAE5E,SAAU;MAAC6E,OAAO,EAAEd;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvD/E,OAAA,CAACL,eAAe;MAAC2F,OAAO,EAAE1E,WAAW,CAAC+C,OAAQ;MAACyB,IAAI,EAAE1E,YAAa;MAAC2E,OAAO,EAAEA,CAAA,KAAM1E,eAAe,CAAC,KAAK;IAAE;MAAAiE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxG,CAAC;AAER,CAAC;AAAC1E,EAAA,CAxKIF,IAAI;EAAA,QAC+BN,OAAO,EAM5BH,OAAO;AAAA;AAAA6F,EAAA,GAPrBpF,IAAI;AA0KV,eAAeA,IAAI;AAAC,IAAAoF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}